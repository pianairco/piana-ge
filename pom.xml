<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>piana-ge</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.plugin.version>3.10.1</maven.compiler.plugin.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <lwjgl.version>3.3.2</lwjgl.version>
        <maven.shade.plugin.version>3.2.4</maven.shade.plugin.version>
        <native.maven.plugin.version>0.9.17</native.maven.plugin.version>
        <graalvm.version>22.3.0</graalvm.version>
        <native.image.dir.name>native-image-${platform}</native.image.dir.name>
        <exec.mainClass>HelloWorld</exec.mainClass>
        <sys.props></sys.props>
    </properties>

    <profiles>
        <!-- profiles based on OS platforms (64-bit architectures only) -->
        <profile>
            <id>linux-amd64</id>
            <activation>
                <os>
                    <family>Linux</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <platform>linux</platform>
            </properties>
        </profile>
        <profile>
            <id>linux-arm64</id>
            <activation>
                <os>
                    <family>Linux</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <platform>linux-arm64</platform>
            </properties>
        </profile>
        <profile>
            <id>mac-amd64</id>
            <activation>
                <os>
                    <family>Mac</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <platform>macos</platform>
            </properties>
        </profile>
        <profile>
            <id>mac-arm64</id>
            <activation>
                <os>
                    <family>Mac</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <platform>macos-arm64</platform>
            </properties>
        </profile>
        <profile>
            <id>windows-amd64</id>
            <activation>
                <os>
                    <family>Windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <platform>windows</platform>
            </properties>
        </profile>
        <profile>
            <id>windows-arm64</id>
            <activation>
                <os>
                    <family>Windows</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <platform>windows-arm64</platform>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <!-- GraalVM's agent to generate (or merge with) native-image configuration files -->
                        <!-- argument>-agentlib:native-image-agent=config-merge-dir=src/main/resources/META-INF/native-image</argument -->
                        <argument>${sys.props}</argument>
                        <argument>-classpath</argument>
                        <classpath/>
                        <argument>${exec.mainClass}</argument>
                    </arguments>
                </configuration>
            </plugin>
            <!-- extract the LWJGL manifest file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.lwjgl</groupId>
                                    <artifactId>lwjgl</artifactId>
                                    <version>${lwjgl.version}</version>
                                    <outputDirectory>${project.build.directory}/tmp</outputDirectory>
                                    <includes>META-INF/MANIFEST.MF</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- create the uber jar with all dependencies for current platform -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>no-deps-${platform}</shadedClassifierName>
                            <filters>
                                <filter>
                                    <!-- exclude files that sign a jar -->
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <!-- exclude any other manifest files -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                                    <resource>MANIFEST.MF</resource>
                                </transformer>
                                <!-- include the LWJGL manifest file in the uber jar -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                                    <resource>META-INF/MANIFEST.MF</resource>
                                    <file>${project.build.directory}/tmp/META-INF/MANIFEST.MF</file>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--<plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>${native.maven.plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    &lt;!&ndash; execution>
                        <id>test-native</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                    </execution &ndash;&gt;
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>compile-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    &lt;!&ndash; outputDir>${project.build.directory}/${native.image.dir.name}</outputDir &ndash;&gt;
                    <imageName>${project.name}</imageName>
                    <mainClass>${exec.mainClass}</mainClass>
                    <metadataRepository>
                        <enabled>false</enabled>
                    </metadataRepository>
                    <buildArgs>
                        <buildArg>&#45;&#45;no-fallback</buildArg>
                        <buildArg>&#45;&#45;initialize-at-run-time=org.lwjgl</buildArg>
                        <buildArg>&#45;&#45;native-image-info</buildArg>
                        <buildArg>&#45;&#45;verbose</buildArg>
                        &lt;!&ndash; buildArg>-H:+TraceNativeToolUsage</buildArg &ndash;&gt;
                        <buildArg>-H:TempDirectory=${project.build.directory}/tmp/${native.image.dir.name}</buildArg>
                        <buildArg>-H:Path=${project.build.directory}/${native.image.dir.name}</buildArg>
                    </buildArgs>
                    <skip>false</skip>
                    &lt;!&ndash; use the uber jar for native image compiling
                         if long classpath is a problem in Windows
                    &ndash;&gt;
                    &lt;!&ndash; classpath>
                        <param>
                            ${project.build.directory}/${project.artifactId}-${project.version}-no-deps-${platform}.jar
                        </param>
                    </classpath &ndash;&gt;
                </configuration>
            </plugin>-->
            <!-- some cleanup tasks using the Ant tool -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>remove-unneeded-dll-files</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <target>
                        <!-- add extra attributes to the shaded uber jar's manifest -->
                        <jar destfile="${project.build.directory}/${project.artifactId}-${project.version}-no-deps-${platform}.jar"
                             update="true">
                            <manifest>
                                <attribute name="Ant-Version" value="${ant.version}"/>
                                <attribute name="Created-By" value="Apache Maven ${maven.version}"/>
                                <attribute name="Build-Jdk" value="${java.version}"/>
                                <attribute name="Main-Class" value="${exec.mainClass}"/>
                            </manifest>
                        </jar>
                        <move todir="${project.build.directory}/tmp/${native.image.dir.name}"
                              failonerror="false" quiet="true">
                            <fileset dir="${project.build.directory}/${native.image.dir.name}">
                                <include name="*.dll"/>
                                <include name="*.pdb"/>
                                <include name="*.txt"/>
                            </fileset>
                        </move>
                        <move file="${project.build.directory}/${native.image.dir.name}/reports"
                              tofile="${project.build.directory}/tmp/${native.image.dir.name}/reports"
                              failonerror="false" quiet="true"/>
                    </target>
                </configuration>
            </plugin>
        </plugins>
        <finalName>piana-game-engin</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.yml</include>
                    <include>**/*.ms3d</include>
                    <include>**/*.bmp</include>
                    <include>**/*.jpeg</include>
                    <include>**/*.jpg</include>
                    <include>**/*.png</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.yml</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                    <exclude>**/*.class</exclude>
                </excludes>
            </resource>
        </resources>
    </build>

    <dependencyManagement>
        <dependencies>
            <!-- get recommended dependency versions from the LWJGL BOM -->
            <dependency>
                <groupId>org.lwjgl</groupId>
                <artifactId>lwjgl-bom</artifactId>
                <version>${lwjgl.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.13.0</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>6.0.9</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>2.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>2.1.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.github.java-graphics/glm -->
        <dependency>
            <groupId>io.github.java-graphics</groupId>
            <artifactId>glm</artifactId>
            <version>1.0.1</version>
        </dependency>

        <dependency>
            <groupId>org.graalvm.sdk</groupId>
            <artifactId>graal-sdk</artifactId>
            <version>${graalvm.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.lwjgl/lwjgl -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
            <classifier>natives-${platform}</classifier>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.lwjgl/lwjgl-opengl -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.lwjgl/lwjgl-glfw -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-glfw</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-glfw</artifactId>
            <classifier>natives-${platform}</classifier>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.lwjgl/lwjgl-assimp -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-assimp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-assimp</artifactId>
            <classifier>natives-${platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-openal</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-openal</artifactId>
            <classifier>natives-${platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
            <classifier>natives-${platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-stb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-stb</artifactId>
            <classifier>natives-${platform}</classifier>
        </dependency>
    </dependencies>

</project>
